import type { NextPage } from 'next';
import dynamic from 'next/dynamic';
import Head from 'next/head';
import Image from 'next/image';
import React, { FC, useCallback } from 'react';
import styles from '../styles/Home.module.css';
import { WalletError, WalletNotConnectedError } from '@solana/wallet-adapter-base';
import { useConnection, useWallet } from '@solana/wallet-adapter-react';
import { Keypair, SystemProgram, Transaction, PublicKey } from '@solana/web3.js';
import Wallet from '@project-serum/sol-wallet-adapter';
import { Button, Input, Text, Spacer } from "@nextui-org/react";

// end of storeSender function
const WalletDisconnectButtonDynamic = dynamic(
    async () => (await import('@solana/wallet-adapter-react-ui')).WalletDisconnectButton,
    { ssr: false }
);
const WalletMultiButtonDynamic = dynamic(
    async () => (await import('@solana/wallet-adapter-react-ui')).WalletMultiButton,
    { ssr: false }
);


const Home: NextPage = () => {
    const {connection} = useConnection();
    const wallet = useWallet();

    const onClick = useCallback(async () => {
        if (!wallet.publicKey) throw new WalletNotConnectedError();

        // 890880 lamports as of 2022-09-01
        const lamports:number = Math.floor(Number(parseFloat((document.getElementById('Amount') as HTMLInputElement).value)*890880));
        const pub = new PublicKey((document.getElementById('Sender') as HTMLInputElement).value);

        const transaction = new Transaction().add(
            SystemProgram.transfer({
                fromPubkey: wallet.publicKey,
                toPubkey: pub,
                lamports,
            })
        );

        const {
            context: { slot: minContextSlot },
            value: { blockhash, lastValidBlockHeight }
        } = await connection.getLatestBlockhashAndContext();

        const signature = await wallet.sendTransaction(transaction, connection, { minContextSlot });

        await connection.confirmTransaction({ blockhash, lastValidBlockHeight, signature });

        //Write a return notification saying payment succesful to Sender
        //

        (document.getElementById('Sender') as HTMLInputElement).value = '';
        (document.getElementById('Amount') as HTMLInputElement).value = '';
    }, [wallet.publicKey, wallet.sendTransaction, connection]);

    if(wallet.connected){
    return (
        <div className={styles.container}>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className={styles.main}>
            <Text
        h1
        size={60}
        css={{
          textGradient: "45deg, $blue600 -20%, $pink600 50%",
        }}
        weight="bold"
      >
                    Hey, it's <a>DePay!</a> {}
                </Text>

                <div className={styles.walletButtons}>
                    <WalletDisconnectButtonDynamic />
                </div>
                <Spacer y={1} />
                <div className = {styles.MoneySender}>
                    <Input className={styles.input} type="text" 
                    placeholder="Who Are You Sending To?" 
                    id="Sender" 
                    bordered
                    color="secondary" 
                    width="500px"></Input>
                    <Spacer y={1} />
                    <Input className = {styles.input} type="text" 
                    placeholder="How Much You Sendin?" 
                    id="Amount" 
                    bordered
                    color="secondary"
                    width="500px"
                    >
                    </Input>
                    <Spacer y={1} />
                    <Button onClick={onClick} disabled={!wallet.publicKey}>
                        Send SOL!
                    </Button>
                    <Spacer y={1} />
                </div>
                <div>
                    {wallet.publicKey && <p>Public Key: {wallet.publicKey.toBase58()}</p>}
                </div>

            </main>
        </div>
    );}
    else {
        //Wallet Not Connected
        return(
            <main className={styles.main}>
                <div className={styles.walletButtons}>
                <WalletMultiButtonDynamic />
            </div>
            </main>
        )
    }
    /*
    function mapSender(pub: string) {
        pub = 'helpo me';
    }
    */
   
};

export default Home;
